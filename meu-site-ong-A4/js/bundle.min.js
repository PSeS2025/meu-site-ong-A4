// js/bundle.refactored.js
(function(){
  'use strict';

  /*** ======== HELPERS ======== ***/
  const Helpers = {
    escapeHTML(str = '') {
      return String(str)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
    },
    focusElement(el) {
      if (!el) return;
      try { el.focus({ preventScroll: true }); } catch { el.focus(); }
    }
  };

  /*** ======== TEMPLATES ======== ***/
  const Templates = (() => {
    const T = {};
    function register(name, htmlStr) {
      if (typeof name !== 'string') return;
      T[name] = (typeof htmlStr === 'string' ? htmlStr : String(htmlStr)).trim();
    }
    function render(name, selector, data = {}) {
      const tpl = T[name];
      const el = document.querySelector(selector);
      if (!el) return console.error('Selector não encontrado', selector);
      if (!tpl) return el.innerHTML = '<p>Template não encontrado</p>';

      try {
        const out = tpl
          // if blocks
          .replace(/{{#if\s+([\w.]+)}}([\s\S]*?){{\/if}}/g, (match, key, inner) => {
            const value = key.split('.').reduce((o, x) => (o ? o[x] : undefined), data);
            return value ? inner : '';
          })
          // variables
          .replace(/{{\s*([\w.]+)\s*}}/g, (match, key) => {
            const value = key.split('.').reduce((o, x) => (o ? o[x] : undefined), data);
            if (value === undefined || value === null) return '';
            return Helpers.escapeHTML(value);
          });
        el.innerHTML = out;
      } catch (e) {
        console.error('Erro ao renderizar template', e);
        el.innerHTML = '<p>Erro ao renderizar</p>';
      }
    }
    return { register, render };
  })();

  /*** ======== ROUTER ======== ***/
  const Router = (() => {
    const routes = {};
    let started = false;
    function add(path, handler, title) {
      if (typeof path !== 'string' || typeof handler !== 'function') return;
      routes[path] = { handler, title: title || '' };
    }
    function start(defaultPath = '/') {
      if (started) return;
      started = true;

      function onHash() {
        const path = location.hash.replace(/^#/, '') || defaultPath;
        const r = routes[path] || routes['/404'];
        if (!r) return;
        try {
          r.handler();
          if (r.title) document.title = r.title;
        } catch (e) {
          console.error(e);
          routes['/404'] && routes['/404'].handler();
        }
      }

      window.addEventListener('hashchange', onHash);
      window.addEventListener('load', onHash);
      onHash();
    }
    function navigate(path, replace=false) {
      let target = path.startsWith('#') ? path : '#' + path;
      if (replace) {
        try {
          const url = new URL(location.href);
          url.hash = target;
          history.replaceState(null, '', url.toString());
          window.dispatchEvent(new HashChangeEvent('hashchange'));
        } catch {
          location.replace(location.pathname + location.search + target);
        }
      } else location.hash = target;
    }

    return { add, start, navigate };
  })();

  /*** ======== STORAGE ======== ***/
  const Storage = (() => {
    const PREFIX = 'ong_app_v1_';
    function save(k, v) { try { localStorage.setItem(PREFIX + k, JSON.stringify(v)); } catch (e) { console.warn(e); } }
    function load(k, fallback=null) {
      try { const raw = localStorage.getItem(PREFIX + k); return raw===null?fallback:JSON.parse(raw); } catch { return fallback; }
    }
    function remove(k) { try { localStorage.removeItem(PREFIX + k); } catch {} }
    function keys() { try { return Object.keys(localStorage).filter(x=>x.startsWith(PREFIX)).map(x=>x.replace(PREFIX,'')); } catch { return []; } }
    return { save, load, remove, keys };
  })();

  /*** ======== FORM HANDLER ======== ***/
  const Forms = (() => {
    function validateContact(fd) {
      const errors = {};
      const name = (fd.name || '').trim();
      const email = (fd.email || '').trim();
      const message = (fd.message || '').trim();
      if (name.length < 3) errors.name = 'Informe seu nome (mínimo 3 caracteres).';
      if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) errors.email = 'Informe um e-mail válido.';
      if (message.length < 10) errors.message = 'Mensagem muito curta (mínimo 10 caracteres).';
      return errors;
    }

    function showErrors(formEl, errors) {
      if (!(formEl instanceof HTMLFormElement)) return;
      clearErrors(formEl);

      for (const [k, msg] of Object.entries(errors)) {
        const field = formEl.querySelector(`[name="${k}"]`);
        if (!field) continue;
        const id = k + '-error';
        const s = document.createElement('small');
        s.className = 'field-error';
        s.id = id;
        s.setAttribute('role','alert');
        s.innerText = msg;

        if (field.parentElement.tagName.toLowerCase() === 'label') field.parentElement.insertAdjacentElement('afterend', s);
        else field.insertAdjacentElement('afterend', s);

        field.classList.add('invalid');
        field.setAttribute('aria-invalid','true');
        field.setAttribute('aria-describedby',id);
      }

      const first = formEl.querySelector('.invalid');
      Helpers.focusElement(first);
    }

    function clearErrors(formEl) {
      if (!(formEl instanceof HTMLFormElement)) return;
      formEl.querySelectorAll('.field-error').forEach(e=>e.remove());
      formEl.querySelectorAll('.invalid').forEach(e=>{
        e.classList.remove('invalid');
        e.removeAttribute('aria-invalid');
        e.removeAttribute('aria-describedby');
      });
    }

    function setupContactForm() {
      const form = document.getElementById('contactForm');
      if (!form) return;
      // load draft
      const draft = Storage.load('contact_draft', {});
      for (const k in draft) if (form.elements[k]) form.elements[k].value = draft[k];

      const fb = document.getElementById('formFeedback');
      const saveBtn = document.getElementById('saveDraft');
      let debounce;

      saveBtn?.addEventListener('click', () => {
        clearTimeout(debounce);
        debounce = setTimeout(()=>{
          const data = Object.fromEntries(new FormData(form).entries());
          Storage.save('contact_draft', data);
          if(fb) { fb.textContent='Rascunho salvo localmente.'; setTimeout(()=>fb.textContent='',3000); }
        }, 200);
      });

      form.addEventListener('submit', e=>{
        e.preventDefault();
        clearErrors(form);
        const data = Object.fromEntries(new FormData(form).entries());
        const errs = validateContact(data);
        if(Object.keys(errs).length) { showErrors(form, errs); if(fb) fb.textContent='Corrija os campos destacados.'; return; }

        try {
          const subs = Storage.load('submissions', []) || [];
          subs.push({ ...data, createdAt: new Date().toISOString() });
          Storage.save('submissions', subs);
          Storage.remove('contact_draft');
          form.reset();
          if(fb) { fb.textContent='Mensagem enviada com sucesso (salva localmente).'; setTimeout(()=>fb.textContent='',4000); }
        } catch { if(fb) fb.textContent='Erro ao salvar mensagem.'; }
      });
    }

    return { setupContactForm, validateContact, showErrors, clearErrors };
  })();

  /*** ======== MENU ======== ***/
  const Menu = (() => {
    const menuToggle = document.getElementById('menuToggle');
    const menu = document.getElementById('main-menu');
    if(!menuToggle || !menu) return;
    menuToggle.addEventListener('click', ()=>{
      const active = menu.classList.toggle('active');
      menuToggle.setAttribute('aria-expanded', String(active));
      if(active) Helpers.focusElement(menu.querySelector('a,button,[role="button"]'));
    });
    menu.querySelectorAll('a').forEach(a=>{
      a.addEventListener('click', ()=>{
        if(window.innerWidth<=768){
          menu.classList.remove('active');
          menuToggle.setAttribute('aria-expanded','false');
        }
      });
    });
  })();

  /*** ======== THEME ======== ***/
  const Theme = (()=>{
    const tgl = document.getElementById('themeToggle');
    const contrast = document.getElementById('contrastToggle');

    tgl?.addEventListener('click', ()=>{
      const on = document.documentElement.classList.toggle('dark');
      tgl.setAttribute('aria-pressed', String(on));
      localStorage.setItem('theme_dark', on?'1':'0');
    });

    contrast?.addEventListener('click', ()=>{
      const on = document.documentElement.classList.toggle('high-contrast');
      contrast.setAttribute('aria-pressed', String(on));
      localStorage.setItem('theme_hc', on?'1':'0');
    });

    if(localStorage.getItem('theme_dark')==='1') document.documentElement.classList.add('dark');
    if(localStorage.getItem('theme_hc')==='1') document.documentElement.classList.add('high-contrast');
  })();

  /*** ======== MODAL ======== ***/
  const Modal = (() => {
    document.addEventListener('click', e=>{
      const clickedImg = e.target?.tagName==='IMG'?e.target.closest('.galeria-item'):null;
      if(!clickedImg) return;

      document.querySelectorAll('.modal').forEach(m=>m.remove());
      const modal = document.createElement('div');
      modal.className='modal a11y-modal';
      modal.setAttribute('role','dialog');
      modal.setAttribute('aria-modal','true');
      modal.setAttribute('aria-label','Visualização da imagem');
      modal.tabIndex=-1;

      const content = document.createElement('div');
      content.className='modal-content';
      content.style.position='relative';

      const img = document.createElement('img');
      img.src = e.target.src;
      img.alt = e.target.alt||'';
      content.appendChild(img);

      const close = document.createElement('button');
      close.className='btn';
      close.style.position='absolute';
      close.style.top='10px';
      close.style.right='10px';
      close.setAttribute('aria-label','Fechar visualização de imagem');
      close.innerText='Fechar';
      content.appendChild(close);

      modal.appendChild(content);
      document.body.appendChild(modal);
      document.body.style.overflow='hidden';

      const focusable = [close];
      const prevActive = document.activeElement;
      Helpers.focusElement(close);

      function removeModal(){
        modal.remove();
        document.body.style.overflow='';
        Helpers.focusElement(prevActive);
      }

      close.addEventListener('click', removeModal);
      modal.addEventListener('click', ev=>{ if(ev.target===modal) removeModal(); });
      modal.addEventListener('keydown', ev=>{
        if(ev.key==='Escape'){ ev.preventDefault(); removeModal(); }
        if(ev.key==='Tab'){ ev.preventDefault(); focusable[0].focus(); }
      });
    });
  })();

  /*** ======== SKIP LINK ======== ***/
  (()=>{
    const skip = document.querySelector('.skip-link');
    skip?.addEventListener('click', ()=>{
      const id = skip.getAttribute('href')?.replace(/^#/,'') || '';
      const target = document.getElementById(id);
      setTimeout(()=>Helpers.focusElement(target), 40);
    });
  })();

  /*** ======== TEMPLATES REGISTRATION ======== ***/
  Templates.register('home', `
    <section class="hero">
      <h1>Bem-vindo à ONG Esperança</h1>
      <p>Clique no botão abaixo e descubra como ser um voluntário.</p>
      <a href="#/voluntariado" class="btn" data-nav>Seja Voluntário</a>
    </section>
  `);

  Templates.register('sobre', `
    <section class="container">
      <h1>Sobre Nós</h1>
      <p>A ONG Esperança atua há mais de 10 anos promovendo inclusão social e ações solidárias.</p>
      <h2>Galeria de Fotos</h2>
      <div class="galeria" aria-label="Galeria de fotos">
        <div class="galeria-item"><img src="assets/mensagem.jpg" alt="Foto ilustrativa de uma ação comunitária"></div>
      </div>
    </section>
  `);

  Templates.register('voluntariado', `
    <section>
      <h2>Voluntariado</h2>
      <ul>
        <li>Ensino</li>
        <li>Acolhimento</li>
      </ul>
    </section>
  `);

  Templates.register('doacoes', `
    <main class="container" role="main">
      <h1>Como doar</h1>
      <form id="form-doacao" class="card" novalidate>
        <label for="doacao-nome">Nome</label>
        <input id="doacao-nome" type="text" name="nome" required minlength="3">
        <label for="doacao-email">E-mail</label>
        <input id="doacao-email" type="email" name="email" required>
        <label for="doacao-valor">Valor (R$)</label>
        <input id="doacao-valor" type="number" name="valor" min="1" step="0.01" required>
        <div class="form-actions">
          <button type="submit" class="btn">Doar</button>
        </div>
        <div id="doacao-feedback" aria-live="polite"></div>
      </form>
    </main>
  `);

  Templates.register('contato', `
    <section class="container">
      <h1>Contato</h1>
      <form id="contactForm" class="card" novalidate>
        <label for="name">Nome</label>
        <input id="name" name="name" type="text" required>
        <label for="email">E-mail</label>
        <input id="email" name="email" type="email" required>
        <label for="message">Mensagem</label>
        <textarea id="message" name="message" rows="5" required></textarea>
        <div class="form-actions">
          <button type="submit" class="btn">Enviar</button>
          <button type="button" id="saveDraft" class="btn alt">Salvar rascunho</button>
        </div>
        <div id="formFeedback" aria-live="polite"></div>
      </form>
    </section>
  `);

  Templates.register('404', `
    <section>
      <h2>Página não encontrada</h2>
      <p>Verifique o menu e tente novamente.</p>
    </section>
  `);

  /*** ======== ROUTES ======== ***/
  Router.add('/', ()=>Templates.render('home','#app'));
  Router.add('/sobre', ()=>Templates.render('sobre','#app'));
  Router.add('/voluntariado', ()=>Templates.render('voluntariado','#app'));
  Router.add('/doacoes', ()=>Templates.render('doacoes','#app'));
  Router.add('/contato', ()=>{
    Templates.render('contato','#app');
    Forms.setupContactForm();
  });
  Router.add('/404', ()=>Templates.render('404','#app'));
  Router.start('/');

  /*** ======== FOCUS ON ROUTE CHANGE ======== ***/
  window.addEventListener('hashchange', ()=>{
    setTimeout(()=>{
      const main = document.getElementById('app');
      if(!main) return;
      const target = main.querySelector('h1,h2,a,input,button,textarea,select');
      Helpers.focusElement(target);
    },50);
  });

})();

